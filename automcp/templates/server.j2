from typing import List
import subprocess
from mcp.server.fastmcp import FastMCP

def run_shell(command: List[str]):
    logs = ""
    process = subprocess.Popen(
        command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True
    )
    if process.stdout is None:
        raise subprocess.CalledProcessError(
            returncode=process.returncode,
            cmd=command,
            output=logs,
            stderr=logs,
        )
    for line in process.stdout:
        logs += line
    process.wait()
    return logs

mcp = FastMCP(name="{{ name }} MCP Server")

{% for command in commands %}

@mcp.tool()
def {{ command.function }}(
{%- for arg in command.args %}
    {{ arg.name }}{%- if loop.index0 < command.args|length - 1 %},{% endif %}
{%- endfor %}
) -> str:
    """{{ command.description }}"""
    splits = "{{ command.command }}".split()
    commands = splits + [
        {%- for arg in command.args %}
        "{{ arg.name }}",
        {%- endfor %}
    ]
    return run_shell(commands)

{% endfor %}
